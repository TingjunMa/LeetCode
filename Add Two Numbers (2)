# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        ListNode(dummy)
        p1=l1,p2=l2,cur=dummy.next
        carry=0
        
        while (p1!=null or p2!=null):
            if p1!=null:
                x=p1.val
            else:
                x=0
            
            if p2!=null:
                y=p2.val
            else:
                y=0
            
            sum=x+y+carry
            carry=sum/10
            cur.val=sum%10
            cur=cur.next
        
        if carry==1:
            cur.next.val=1
        
        return dummy.next
        
        
"""
Java Code:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy=new ListNode(0);
        ListNode p1=l1,p2=l2,cur=dummy;
        int x,y,carry=0,sum;
        
        while (p1!=null || p2!=null){
            x=( (p1!=null)? p1.val:0);
            y=( (p2!=null)? p2.val:0);
            sum=x+y+carry;
            carry=sum/10;
            cur.next=new ListNode(sum%10);
            cur=cur.next;
            if (p1!=null){
                p1=p1.next;
            }
            if (p2!=null){
                p2=p2.next;
            }
        }
        if (carry==1){
            cur.next=new ListNode(1);
        }
        return dummy.next;
    }
}
